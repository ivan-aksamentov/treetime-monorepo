version: '3.7'

services:
  treetime-dev-reverseproxy:
    depends_on:
      - treetime-dev-api
      - treetime-dev-web
    container_name: treetime-dev-reverseproxy
    image: treetime-dev-reverseproxy
    build:
      context: ./
      dockerfile: ../reverseproxy/development/Dockerfile
    command: sh /etc/nginx/nginx-watch.sh
    volumes:
      - ../reverseproxy/development/etc/nginx:/etc/nginx:ro
      - ../.volumes/nginx:/volumes
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 44443:44443
      - 8080:8080
    environment:
      - COLORTERM=truecolor
      - TERM=xterm-truecolor
    restart: 'no'
    init: true
    tty: true

  treetime-dev-api:
    depends_on:
      - treetime-dev-taskqueue
      - treetime-dev-filestore
    container_name: treetime-dev-api
    image: treetime-dev-api
    build:
      context: ./
      dockerfile: node-git-alpine/Dockerfile
    command:
      sh -c "cd /code/api && yarn install --silent && dockerize -wait
      tcp://treetime-dev-taskqueue:5672 -timeout 60s >& /dev/null && yarn dev"
    volumes:
      - ../:/code
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 5000:5000
    environment:
      - COLORTERM=truecolor
      - TERM=xterm-truecolor
    restart: 'no'
    init: true
    user: '${UID}'
    tty: true

  treetime-dev-web:
    depends_on:
      - treetime-dev-api
    container_name: treetime-dev-web
    image: treetime-dev-web
    build:
      context: ./
      dockerfile: node-git-alpine/Dockerfile
    command: sh -c "cd /code/web && yarn install --silent && yarn dev"
    volumes:
      - ../:/code
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 3000:3000
    environment:
      - COLORTERM=truecolor
      - TERM=xterm-truecolor
    restart: 'no'
    init: true
    user: '${UID}'
    tty: true

  treetime-dev-worker-base:
    container_name: treetime-dev-worker-base
    image: treetime-dev-worker-base
    build:
      context: ../
      dockerfile: worker/Dockerfile
    command: sh -c "cd /code/worker && yarn install --silent && yarn dev:docker:base"
    volumes:
      - ../:/code
      - ../worker/docker/.config/pypoetry/config.toml:/.config/pypoetry/config.toml
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - COLORTERM=truecolor
      - TERM=xterm-truecolor
    restart: 'no'
    init: true
    user: '${UID}'
    tty: true

  treetime-dev-worker:
    depends_on:
      - treetime-dev-worker-base
      - treetime-dev-taskqueue
      - treetime-dev-filestore
    image: treetime-dev-worker
    build:
      context: ../
      dockerfile: worker/Dockerfile
    command: sh -c "cd /code/worker && yarn install --silent && yarn dev:docker:main"
    volumes:
      - ../:/code
      - ../worker/docker/.config/pypoetry/config.toml:/.config/pypoetry/config.toml
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - COLORTERM=truecolor
      - TERM=xterm-truecolor
    restart: 'no'
    init: true
    user: '${UID}'
    tty: true
    deploy:
      replicas: 3

  treetime-dev-taskqueue:
    container_name: treetime-dev-taskqueue
    image: rabbitmq:3.8.2-management-alpine
    volumes:
      - ../:/code
      - ../.volumes/taskqueue/config/generated:/var/lib/rabbitmq/config/generated
      - ../taskqueue/dev/etc/rabbitmq:/etc/rabbitmq:ro
      - ../taskqueue/dev/var/lib/rabbitmq/.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - ../.env
    environment:
      - RABBITMQ_NODENAME=taskqueue001
      - RABBITMQ_HOME=/code/.volumes/taskqueue/home
      - RABBITMQ_MNESIA_BASE=/code/.volumes/taskqueue/mnesia
      - RABBITMQ_LOG_BASE=/code/.volumes/taskqueue/log
      - RABBITMQ_SCHEMA_DIR=/code/.volumes/taskqueue/schema
      - COLORTERM=truecolor
      - TERM=xterm-truecolor
    restart: 'no'
    init: true
    user: '${UID}'
    tty: true

  treetime-dev-filestore:
    container_name: treetime-dev-filestore
    image: minio/minio:RELEASE.2020-02-07T23-28-16Z
    command: server --quiet /code/.volumes/filestore
    volumes:
      - ../:/code
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 9000:9000
    env_file:
      - ../.env
    environment:
      - COLORTERM=truecolor
      - TERM=xterm-truecolor
    restart: 'no'
    init: true
    user: '${UID}'
    tty: true
